[General]
network = cellularroundrobin.CellularNetwork
repeat = 35
seed-set = ${repetition}
num-rngs = 40

# Record all statistics
**.statistic-recording = true
**.scalar-recording = true
**.vector-recording = false

# Result file naming
output-scalar-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.vec

# Common parameters
*.numUsers = 10
*.baseStation.numResourceBlocks = 25
*.baseStation.ttiDuration = 1ms
*.baseStation.schedulingAlgorithm = "RoundRobin"

# RNG mapping for reproducibility
# Each user gets 3 RNG streams: arrivals (base+0), sizes (base+1), CQI (base+2)
*.user[*].arrivalRngId = 3*index + 0
*.user[*].sizeRngId = 3*index + 1
*.user[*].cqiRngId = 3*index + 2

#------------------------------------------------------------------------------
# Validation Tests
#------------------------------------------------------------------------------

# Validation Test 1: Single user, fixed packet size, fixed CQI, different arrival rates
[Config ValidationTest1]
description = "Single user with fixed packet size and CQI 15"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 1
*.user[0].arrivalPattern = "fixed"
*.user[0].packetPattern = "fixed"
*.user[0].maxPacketSize = 75B
*.user[0].cqiModel = "fixed"
*.user[0].cqi = 15
*.user[0].arrivalRate = ${arrivalRate=11000.0..33000.0 step 2000.0}Hz

# Validation Test 2: Two users with different CQI
[Config ValidationTest2]
description = "Two users with different CQI values"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 2
*.user[*].arrivalPattern = "fixed"
*.user[*].packetPattern = "fixed"
*.user[*].maxPacketSize = 40B
*.user[*].cqiModel = "fixed"
*.user[0].cqi = 6
*.user[1].cqi = 15
*.user[*].arrivalRate = ${arrivalRate=4000.0..34000.0 step 3000.0}Hz

# Validation Test 3: Single user with uniform distributions
[Config ValidationTest3]
description = "Single user with uniform packet size and CQI"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 1
*.user[0].arrivalPattern = "exponential"
*.user[0].arrivalRate = ${arrivalRate=20000.0..30000.0 step 1000.0}Hz
*.user[0].maxPacketSize = 75B
*.user[0].cqiModel = "uniform"
*.user[0].maxCQI = 15

# Validation Test 4: Single user with binomial CQI
[Config ValidationTest4]
description = "Single user with binomial CQI distribution"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 1
*.user[0].arrivalPattern = "exponential"
*.user[0].arrivalRate = ${arrivalRate=5000.0..50000.0 step 5000.0}Hz
*.user[0].maxPacketSize = 75B
*.user[0].cqiModel = "binomial"
*.user[0].binomialN = 15
*.user[0].binomialP = 0.5

# Validation Test 5: Ten users with small packets
[Config ValidationTest5]
description = "Ten users with small fixed packets and uniform CQI"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 10
*.user[*].arrivalPattern = "exponential"
*.user[*].packetPattern = "fixed"
*.user[*].maxPacketSize = 25B
*.user[*].cqiModel = "uniform"
*.user[*].maxCQI = 15
*.user[*].arrivalRate = ${arrivalRate=2300.0..4700.0 step 200.0}Hz

#------------------------------------------------------------------------------
# Simulation Scenarios
#------------------------------------------------------------------------------

# Scenario 1: Exponential arrivals, uniform service demands, uniform CQIs
[Config Scenario1]
description = "Exponential arrivals with uniform packet sizes and CQI"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 10
*.user[*].arrivalPattern = "exponential"
*.user[*].arrivalRate = ${arrivalRate=1500.0..3300.0 step 200.0}Hz
*.user[*].maxPacketSize = 75B
*.user[*].cqiModel = "uniform"
*.user[*].maxCQI = 15

# Scenario 2: Exponential arrivals with binomial CQI (user groups)
[Config Scenario2]
description = "Exponential arrivals with grouped users having different channel qualities"
sim-time-limit = 60s
warmup-period = 5s

*.numUsers = 10

# All users have exponential arrivals
*.user[*].arrivalPattern = "exponential"
*.user[*].arrivalRate = ${arrivalRate=500.0..9000.0 step 500.0}Hz
*.user[*].maxPacketSize = 75B
*.user[*].cqiModel = "binomial"
*.user[*].binomialN = 15

# Group 1: Good channel users (0-2)
*.user[0..2].binomialP = 0.8

# Group 2: Medium channel users (3-6)
*.user[3..6].binomialP = 0.5

# Group 3: Poor channel users (7-9)
*.user[7..9].binomialP = 0.2

#------------------------------------------------------------------------------
# Warmup and Simulation Time Detection
#------------------------------------------------------------------------------

# Configuration for detecting appropriate warmup period
[Config WarmupDetection9000Uniform]
description = "Determine appropriate warmup period"
sim-time-limit = 100s
warmup-period = 0s
repeat = 10
*.user[*].arrivalRate = 9000.0Hz
*.numUsers = 10
*.user[*].arrivalPattern = "exponential"
*.user[*].maxPacketSize = 75B
*.user[*].cqiModel = "uniform"
*.user[*].maxCQI = 15
*.user[*].binomialN = 15
*.user[*].binomialP = 0.8
**.vector-recording = true
**.result-recording-modes = all

#------------------------------------------------------------------------------
# Debug Configuration
#------------------------------------------------------------------------------
[Config Debug]
extends = Scenario1
description = "Debug configuration with detailed output"
sim-time-limit = 1s
warmup-period = 0s
repeat = 1
**.debug = true
#**.eventlog-recording = true
cmdenv-express-mode = false
cmdenv-event-banners = true

*.numUsers = 2
*.user[*].arrivalRate = 1000.0Hz
*.user[*].maxPacketSize = 75B
*.user[*].cqiModel = "uniform"